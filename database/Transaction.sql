--TRANSACTION NHẬP HÀNG-------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_NHAP_HANG (
    MA_VAT_TU IN VARCHAR2,
    SO_LUONG_NHAP IN NUMBER,
    MA_NHAN_VIEN IN VARCHAR2,
    MA_NHA_CUNG_CAP IN VARCHAR2,
    MA_GIAO_DICH IN VARCHAR2
)
IS
    SO_LUONG_HIEN_CO NUMBER;
BEGIN
    -- Lấy số lượng hiện có và khóa dòng
    SELECT SOLUONG INTO SO_LUONG_HIEN_CO
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    -- Cập nhật số lượng vật tư
    UPDATE VATTU
    SET SOLUONG = SO_LUONG_HIEN_CO + SO_LUONG_NHAP
    WHERE MAVT = MA_VAT_TU;

    -- Thêm giao dịch nhập hàng (nếu cần)
    INSERT INTO GIAODICH(MAGD, LOAIGD) VALUES(MA_GIAO_DICH, 'NHAP');

    -- Thêm chi tiết nhập hàng
    INSERT INTO CT_NHAP VALUES(MA_GIAO_DICH, MA_VAT_TU, SO_LUONG_NHAP, MA_NHAN_VIEN, MA_NHA_CUNG_CAP);

EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -60 THEN -- Deadlock
            RAISE_APPLICATION_ERROR(-20002, 'Deadlock');
        ELSE
            RAISE_APPLICATION_ERROR(-20001, SQLERRM);
        END IF;
END TRANSACTION_NHAP_HANG;
/

--TRANSACTION XUẤT HÀNG-------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_XUAT_HANG (
    MA_VAT_TU IN VARCHAR2,
    SO_LUONG_XUAT IN NUMBER,
    MA_NHAN_VIEN IN VARCHAR2,
    MA_KHACH_HANG IN VARCHAR2,
    MA_GIAO_DICH IN VARCHAR2
)
IS
    SO_LUONG_HIEN_CO NUMBER;
    DON_GIA_XUAT NUMBER;
    THANH_TIEN NUMBER;
BEGIN
    -- Lấy đơn giá xuất và số lượng hiện có, khóa dòng
    SELECT DONGIAXUAT, SOLUONG INTO DON_GIA_XUAT, SO_LUONG_HIEN_CO
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    -- Kiểm tra đủ số lượng xuất
    IF SO_LUONG_HIEN_CO < SO_LUONG_XUAT THEN
        RAISE_APPLICATION_ERROR(-20001, 'Không đủ hàng để xuất');
    END IF;

    -- Tính thành tiền
    THANH_TIEN := DON_GIA_XUAT * SO_LUONG_XUAT;

    -- Cập nhật số lượng vật tư
    UPDATE VATTU
    SET SOLUONG = SO_LUONG_HIEN_CO - SO_LUONG_XUAT
    WHERE MAVT = MA_VAT_TU;

    -- Thêm giao dịch xuất hàng (nếu cần)
    INSERT INTO GIAODICH(MAGD, LOAIGD) VALUES(MA_GIAO_DICH, 'XUAT');

    -- Thêm chi tiết xuất hàng
    INSERT INTO CT_XUAT VALUES(MA_GIAO_DICH, MA_VAT_TU, SO_LUONG_XUAT, MA_NHAN_VIEN, THANH_TIEN, MA_KHACH_HANG);

EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -60 THEN
            RAISE_APPLICATION_ERROR(-20002, 'Deadlock');
        ELSE
            RAISE_APPLICATION_ERROR(-20003, SQLERRM);
        END IF;
END TRANSACTION_XUAT_HANG;
/

--TRANSACTION HỦY GIAO DỊCH----------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_HUY_GIAO_DICH (
    MA_GIAO_DICH IN VARCHAR2,
    MA_VAT_TU IN VARCHAR2
)
IS
    LOAI_GIAO_DICH VARCHAR2(10);
    SL NUMBER;
BEGIN
    -- Lấy loại giao dịch và khóa dòng
    SELECT LOAIGD INTO LOAI_GIAO_DICH
    FROM GIAODICH
    WHERE MAGD = MA_GIAO_DICH
    FOR UPDATE WAIT 5;

    -- Nếu là giao dịch nhập
    IF LOAI_GIAO_DICH = 'NHAP' THEN
        SELECT SL INTO SL FROM CT_NHAP WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
        UPDATE VATTU SET SOLUONG = SOLUONG - SL WHERE MAVT = MA_VAT_TU;
        DELETE FROM CT_NHAP WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
    END IF;

    -- Nếu là giao dịch xuất
    IF LOAI_GIAO_DICH = 'XUAT' THEN
        SELECT SL INTO SL FROM CT_XUAT WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
        UPDATE VATTU SET SOLUONG = SOLUONG + SL WHERE MAVT = MA_VAT_TU;
        DELETE FROM CT_XUAT WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
    END IF;

    -- Xóa giao dịch khỏi bảng giao dịch
    DELETE FROM GIAODICH WHERE MAGD = MA_GIAO_DICH;

EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -60 THEN
            RAISE_APPLICATION_ERROR(-20003, 'Deadlock');
        ELSE
            RAISE_APPLICATION_ERROR(-20004, SQLERRM);
        END IF;
END TRANSACTION_HUY_GIAO_DICH;
/

--TRANSACTION THAY ĐỔI GIÁ----------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_THAY_DOI_GIA (
    MA_LICH_SU_CAP_NHAT_GIA IN VARCHAR2,
    MA_VAT_TU IN VARCHAR2,
    GIA_MOI IN NUMBER
)
IS
    GIA_CU NUMBER;
BEGIN
    -- Lấy giá cũ và khóa dòng
    SELECT DONGIAXUAT INTO GIA_CU
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    IF GIA_CU != GIA_MOI THEN
        UPDATE VATTU SET DONGIAXUAT = GIA_MOI WHERE MAVT = MA_VAT_TU;
        INSERT INTO LICHSUCAPNHAT(MALSCN, MAVT, GIACU, GIAMOI)
        VALUES(MA_LICH_SU_CAP_NHAT_GIA, MA_VAT_TU, GIA_CU, GIA_MOI);
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -60 THEN
            RAISE_APPLICATION_ERROR(-20004, 'Deadlock');
        ELSE
            RAISE_APPLICATION_ERROR(-20005, SQLERRM);
        END IF;
END TRANSACTION_THAY_DOI_GIA;
/

--TRANSACTION KIỂM KÊ SỐ LƯỢNG--------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_KIEM_KE (
    MA_LICH_SU_KIEM_KE IN VARCHAR2,
    MA_NHAN_VIEN IN NUMBER,
    MA_VAT_TU IN NUMBER,
    SO_LUONG_KIEM_KE IN NUMBER,
    TINH_TRANG IN VARCHAR2
)
IS
    SO_LUONG_CON_LAI NUMBER;
BEGIN
    -- Lấy số lượng hiện có và khóa dòng
    SELECT SoLuong INTO SO_LUONG_CON_LAI
    FROM VATTU
    WHERE MaVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    -- Ghi nhận lịch sử kiểm kê
    INSERT INTO LichSuKiemKe (MaNV, MaVT, SoLuongConLai, TinhTrang)
    VALUES (MA_NHAN_VIEN, MA_VAT_TU, SO_LUONG_KIEM_KE, TINH_TRANG);

    -- Nếu có chênh lệch thì cập nhật lại số lượng
    IF SO_LUONG_CON_LAI != SO_LUONG_KIEM_KE THEN
        UPDATE VATTU
        SET SoLuong = SO_LUONG_KIEM_KE
        WHERE MaVT = MA_VAT_TU;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -60 THEN
            RAISE_APPLICATION_ERROR(-20006, 'Deadlock');
        ELSE
            RAISE_APPLICATION_ERROR(-20007, SQLERRM);
        END IF;
END TRANSACTION_KIEM_KE;
/

--TRANSACTION CẬP NHẬT VỊ TRÍ VÀ LƯƠNG NHÂN VIÊN---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_CAP_NHAT_NHAN_VIEN (
    MA_NHAN_VIEN IN NUMBER,
    CHUC_VU_MOI IN VARCHAR2,
    LUONG_MOI IN NUMBER
)
IS
BEGIN
    -- Cập nhật thông tin nhân viên
    UPDATE NHANVIEN
    SET ChucVu = CHUC_VU_MOI,
        Luong = LUONG_MOI
    WHERE MANV = MA_NHAN_VIEN;

    -- Kiểm tra có ai bị ảnh hưởng không
    IF SQL%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20010, 'Không tìm thấy nhân viên để cập nhật');
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20011, SQLERRM);
END TRANSACTION_CAP_NHAT_NHAN_VIEN;
/